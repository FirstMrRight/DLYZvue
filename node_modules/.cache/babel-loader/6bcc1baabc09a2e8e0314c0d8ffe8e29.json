{"remainingRequest":"G:\\vuehr\\node_modules\\babel-loader\\lib\\index.js!G:\\vuehr\\node_modules\\eslint-loader\\index.js??ref--13-0!G:\\vuehr\\src\\utils\\api.js","dependencies":[{"path":"G:\\vuehr\\src\\utils\\api.js","mtime":1586162544215},{"path":"G:\\vuehr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\vuehr\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\vuehr\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message } from 'element-ui';\n/*\r\n* 封装请求的js\r\n* 服务端是200，进入data中，400，500进入error\r\n* 前端data中的数据比较复杂，并不是服务端返回的字段\r\n* data中有一个字段，success，success中的字段才是返回的字段\r\n* */\n\naxios.interceptors.response.use(function (success) {\n  if (success.status && success.status == 200 && success.status == 500) {\n    Message.error({\n      //服务端的返回信息\n      message: success.data.msg\n    });\n    return;\n  }\n\n  if (success.data.msg) {\n    Message.success({\n      message: success.data.msg\n    });\n  }\n\n  return success.data; //服务费返回的数据\n}, function (error) {\n  if (error.response.status == 504 || error.response.status == 404) {\n    Message.error({\n      message: '服务器出现问题'\n    });\n  } else if (error.response.status == 403) {\n    Message.error({\n      message: '权限不足，请联系管理员'\n    });\n  } else if (error.response.data.status == 401) {\n    Message.error({\n      message: '尚未登录，请登录'\n    });\n  } else {\n    if (error.response.data.msg) {\n      Message.error({\n        message: error.response.data.msg\n      });\n    } else {\n      Message.error({\n        message: '未知错误,' + error.response.data.msg\n      });\n    }\n  }\n\n  return;\n});\n/*\r\n*请求封装开始\r\n* post请求以key/value形式传参\r\n* */\n\nvar base = '';\nexport var postKeyValueRequest = function postKeyValueRequest(url, params) {\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    transformRequest: [function (data) {\n      var ret = '';\n\n      for (var i in data) {\n        ret += encodeURIComponent(i) + '=' + encodeURIComponent(data[i]) + '&';\n      }\n\n      return ret;\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n};\nexport var postRequest = function postRequest(url, params) {\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params\n  });\n};\nexport var putRequest = function putRequest(url, params) {\n  return axios({\n    method: 'put',\n    url: \"\".concat(base).concat(url),\n    data: params\n  });\n};\nexport var getRequest = function getRequest(url, params) {\n  return axios({\n    method: 'get',\n    url: \"\".concat(base).concat(url),\n    data: params\n  });\n};\nexport var deleteRequest = function deleteRequest(url, params) {\n  return axios({\n    method: 'delete',\n    url: \"\".concat(base).concat(url),\n    data: params\n  });\n};",{"version":3,"sources":["G:/vuehr/src/utils/api.js"],"names":["axios","Message","interceptors","response","use","success","status","error","message","data","msg","base","postKeyValueRequest","url","params","method","transformRequest","ret","i","encodeURIComponent","headers","postRequest","putRequest","getRequest","deleteRequest"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {Message} from 'element-ui';\r\n\r\n/*\r\n* 封装请求的js\r\n* 服务端是200，进入data中，400，500进入error\r\n* 前端data中的数据比较复杂，并不是服务端返回的字段\r\n* data中有一个字段，success，success中的字段才是返回的字段\r\n* */\r\naxios.interceptors.response.use(success => {\r\n    if (success.status&&success.status==200&&success.status==500){\r\n        Message.error({\r\n            //服务端的返回信息\r\n            message:success.data.msg})\r\n        return;\r\n    }\r\n    if (success.data.msg){\r\n        Message.success({message:success.data.msg})\r\n    }\r\n    return success.data;//服务费返回的数据\r\n},error => {\r\n    if (error.response.status==504||error.response.status==404){\r\n        Message.error({message:'服务器出现问题'})\r\n    }else if(error.response.status==403){\r\n        Message.error({message:'权限不足，请联系管理员'})\r\n    }else if (error.response.data.status==401){\r\n           Message.error({message:'尚未登录，请登录'})\r\n    }else {\r\n        if(error.response.data.msg) {\r\n            Message.error({message: error.response.data.msg})\r\n        }\r\n        else {\r\n            Message.error({message:'未知错误,'+error.response.data.msg})\r\n        }\r\n    }\r\n    return;\r\n})\r\n\r\n\r\n/*\r\n*请求封装开始\r\n* post请求以key/value形式传参\r\n* */\r\n\r\nlet base = '';\r\n\r\nexport const postKeyValueRequest = (url, params) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n        transformRequest: [function (data) {\r\n            let ret = '';\r\n            for (let i in data) {\r\n                ret += encodeURIComponent(i) + '=' + encodeURIComponent(data[i]) + '&'\r\n            }\r\n            return ret;\r\n        }],\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    });\r\n}\r\nexport const postRequest = (url, params) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\nexport const putRequest = (url, params) => {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\nexport const getRequest = (url, params) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\nexport const deleteRequest = (url, params) => {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\n"]}]}